[tool.poetry]
name = "mkdocs-run-shell-cmd-plugin"
version = "0.1.0"
description = "MkDocs plugin to run a specified command or commands and include the output in the generated site."
authors = ["Grant Ramsay <seapagan@gmail.com>"]
readme = "README.md"

repository = "https://github.com/seapagan/mkdocs-run-shell-cmd-plugin"
homepage = "https://github.com/seapagan/mkdocs-run-shell-cmd-plugin"

classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Web Environment",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Documentation",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Text Processing :: Markup :: Markdown",
]

packages = [{include = "mkdocs_run_shell_cmd_plugin"}]

[tool.poetry.plugins."mkdocs.plugins"]
run-shell-cmd = "mkdocs_run_shell_cmd_plugin.plugin:RunShellCmdPlugin"

[tool.poetry.urls]
"Pull Requests" = "https://github.com/seapagan/mkdocs-run-shell-cmd-plugin/pulls"
"Bug Tracker" = "https://github.com/seapagan/mkdocs-run-shell-cmd-plugin/issues"

[tool.poetry.dependencies]
python = "^3.8.1"
mkdocs = "^1.4.3"

[tool.poetry.group.dev.dependencies]
flake8 = "^6.0.0"
flake8-docstrings = "^1.7.0"
flake8-pyproject = "^1.2.3"
flake8-pytest-style = "^1.7.2"
black = "^23.3.0"
pep8-naming = "^0.13.3"
pylint = "^2.17.4"
pydocstyle = {extras = ["toml"], version = "^6.3.0"}
pre-commit = "^3.3.3"
bandit = "^1.7.5"
poethepoet = "^0.20.0"
pytest = "^7.3.2"
pytest-cov = "^4.0.0"
pytest-xdist = "^3.2.1"
pytest-sugar = "^0.9.7"
pytest-randomly = "^3.12.0"
pytest-reverse = "^1.5.0"
pytest-asyncio = "^0.21.0"
pytest-mock = "^3.11.1"
mock = "^5.0.2"
faker = "^18.10.1"
mkdocs-material = "^9.1.16"
pygments = "^2.15.1"
pymdown-extensions = "^10.0.1"
cowsay = "^5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
lint = "pylint **/*.py"
pre = "pre-commit run --all-files"
"docs:serve" = "mkdocs serve -a 0.0.0.0:9000"
"docs:publish"= "mkdocs gh-deploy"
"docs:build" = "mkdocs build"

[tool.flake8]
exclude = ["__init__.py"]
max-line-length = 80
docstring-convention = "google"
ignore=["E203", "W503"]

[tool.bandit]
exclude_dirs = []

[tool.bandit.assert_used]
skips = ['*_test.py', '*/test_*.py']

[tool.pydocstyle]
# add-ignore = ["D104"]

[tool.pytest.ini_options]
addopts = [
  "--cov",
  "--cov-report", "term-missing",
  "--cov-report", "html",
  ]
filterwarnings = []
mock_use_standalone_module = true
markers = [
  "unit: Unit tests",
  "integration: Integration tests",
]

[tool.coverage.run]
# source = []
omit = ["*/tests/*"]
